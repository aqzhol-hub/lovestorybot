from aiogram.types import *
from .constant import *


# –ö—É–∞–Ω—ã—à –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω, 17
# –ê–ª–º–∞—Ç—ã, –ê—É—ç–∑–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
# https://go.2gis.com/i0trd

class Interface():
    def __init__(self,language = True):
        self.language = language

    def welcome(self):

        welcome_animation = 'static/animations/welcome.tgs'
        
        welcome_message = {
            True  : """
            <b>
            –°”ô–ª–µ–º {0}ü§ó, –º–µ–Ω—ñ“£ –∞—Ç—ã–º @yqylasfilmsbot
            .....
            </b>
            """,
            False : """
            <b>
            –ü—Ä–∏–≤–µ—Ç {0}ü§ó, –º–µ–Ω—è –∑–æ–≤—É—Ç @yqylasfilmsbot
            </b>
            """
        }
        
        
        welcome_keyboard = ReplyKeyboardMarkup(keyboard=[
            [WELCOME_LANGUAGE[self.language][0]],
            [WELCOME_LANGUAGE[self.language][1],WELCOME_LANGUAGE[self.language][2]],
            [WELCOME_LANGUAGE[self.language][3],WELCOME_LANGUAGE[self.language][4]],
            [WELCOME_LANGUAGE[self.language][5],WELCOME_LANGUAGE[self.language][6]],
            # [WELCOME_LANGUAGE[self.language][7]]
        ],  resize_keyboard=True,one_time_keyboard=False
        )

        return welcome_animation, welcome_message[self.language], welcome_keyboard

    def start(self):

        start_message = "<b>–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑\n----------------------------------------\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</b>"

        start_keyboard = ReplyKeyboardMarkup(
            keyboard = [[list(INTERFACE_LANGUAGE.keys())[0]], [list(INTERFACE_LANGUAGE.keys())[1]]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
        return start_message, start_keyboard

    def office_address(self):
        return ADDRESS_TEXT[self.language], [43.209661,76.856789]

    def about_us(self):
        
        return 'static/img/logotype.jpeg', ABOUT_US[self.language]

    def send_price(self):
        keyboard = ReplyKeyboardMarkup(keyboard=[[LOVESTORY_KEYBOARD[0]],[LOVESTORY_KEYBOARD[1]],[LOVESTORY_KEYBOARD[2]],[LOVESTORY_KEYBOARD[3]]],resize_keyboard=True)
        return open('static/files/price.pdf', 'rb'),keyboard
    
    def each_price(self,price):
        return PRICE_KEYBOARD[price][0],PRICE_KEYBOARD[price][1][self.language]
        
        
        


    # --------Quiz section‚¨áÔ∏è
    def importance(self):

        importance_photo = 'static/questions/q1.jpg'

        importance_message = {
            True : """<b>–°—ñ–∑ “Ø—à—ñ–Ω LoveStory-–¥–µ –Ω–µ –º–∞“£—ã–∑–¥—ã?</b>""",
            False : """<b>–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤ LoveStory?</b>"""
        }

        importance_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–°—Ü–µ–Ω–∞—Ä–∏–πüï∫',callback_data=VARIATIONS[CATEGORIES[0]][0]),InlineKeyboardButton(text='–û–±—Ä–∞–∑üé≠',callback_data=VARIATIONS[CATEGORIES[0]][1])],[InlineKeyboardButton(text='–õ–æ–∫–∞—Ü–∏—èüèï',callback_data=VARIATIONS[CATEGORIES[0]][2])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–°—Ü–µ–Ω–∞—Ä–∏–πüï∫',callback_data=VARIATIONS[CATEGORIES[0]][0]),InlineKeyboardButton(text='–û–±—Ä–∞–∑üé≠',callback_data=VARIATIONS[CATEGORIES[0]][1])],[InlineKeyboardButton(text='–õ–æ–∫–∞—Ü–∏—èüèï',callback_data=VARIATIONS[CATEGORIES[0]][2])]])
        }        

        return importance_photo,importance_message[self.language],importance_keybard[self.language]


    def style(self):

        style_photo = 'static/questions/q2.jpg'

        style_message = {
            True  : """<b>–°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π —Ç“Ø—Å—ñ—Ä—É —Å—Ç–∏–ª—å—ñ “±–Ω–∞–π–¥—ã?</b>""",
            False : """<b>–ö–∞–∫–æ–π —Å—Ç–∏–ª—å —Å—ä–µ–º–∫–∏ –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?</b>"""
        }

        style_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ö–ª–∞—Å—Å–∏–∫–∞–ª—ã“õüë´',callback_data=VARIATIONS[CATEGORIES[1]][0]),InlineKeyboardButton(text='–î–∏–Ω–∞–º–∏–∫–∞–ª—ã“õüèá',callback_data=VARIATIONS[CATEGORIES[1]][1])],[InlineKeyboardButton(text='–≠–∫—Å—Ç—Ä–µ–º–∞–ª–¥—ãüèÑ‚Äç‚ôÇÔ∏è',callback_data=VARIATIONS[CATEGORIES[1]][2])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–πüë´',callback_data=VARIATIONS[CATEGORIES[1]][0]),InlineKeyboardButton(text='–î–∏–Ω–∞–º–∏—á–Ω—ã–πüèá',callback_data=VARIATIONS[CATEGORIES[1]][1])],[InlineKeyboardButton(text='–≠–∫—Ç—Ä–µ–º–∞–ª—å–Ω—ã–πüèÑ‚Äç‚ôÇÔ∏è',callback_data=VARIATIONS[CATEGORIES[1]][2])]])
        }        

        return style_photo, style_message[self.language], style_keybard[self.language]


    def form(self):
        
        form_photo = 'static/questions/q3.jpg'

        form_message = {
            True  : """<b>–°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π –æ–±—Ä–∞–∑ —ã“£“ì–∞–π–ª—ã?</b>""",
            False : """<b>–ö–∞–∫–æ–π –æ–±—Ä–∞–∑ –≤–∞–º –±–æ–ª—å—à–µ –ø–æ –¥—É—à–µ?</b>"""
        }

        form_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–≠—Ç–Ω–æüß•',callback_data=VARIATIONS[CATEGORIES[2]][0]),InlineKeyboardButton(text='–ö–ª–∞—Å—Å–∏–∫–∞üç∑',callback_data=VARIATIONS[CATEGORIES[2]][1])],[InlineKeyboardButton(text='–ê—Ä—Ç—Ö–∞—É—Åüë©‚Äçüé®',callback_data=VARIATIONS[CATEGORIES[2]][2])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–≠—Ç–Ω–æüß•',callback_data=VARIATIONS[CATEGORIES[2]][0]),InlineKeyboardButton(text='–ö–ª–∞—Å—Å–∏–∫–∞üç∑',callback_data=VARIATIONS[CATEGORIES[2]][1])],[InlineKeyboardButton(text='–ê—Ä—Ç—Ö–∞—É—Åüë©‚Äçüé®',callback_data=VARIATIONS[CATEGORIES[2]][2])]])
        }        

        return form_photo, form_message[self.language], form_keybard[self.language]


    def producer(self):
        
        producer_photo = 'static/questions/q4.jpg'

        producer_message = {
            True  : """<b>–°—Ü–µ–Ω–∞—Ä–∏–π–¥—ñ –∫—ñ–º “õ“±—Ä–∞–¥—ã?</b>""",
            False : """<b>–ö—Ç–æ –ø—Ä–∏–¥—É–º—ã–≤–∞–µ—Ç –∏–¥–µ—é —Å—Ü–µ–Ω–∞—Ä–∏—è?</b>"""
        }

        producer_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ú–µ–Ω',callback_data=VARIATIONS[CATEGORIES[3]][0]),InlineKeyboardButton(text='–°—ñ–∑',callback_data=VARIATIONS[CATEGORIES[3]][1])],[InlineKeyboardButton(text='–ë—ñ—Ä–≥–µ',callback_data=VARIATIONS[CATEGORIES[3]][2])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–Ø',callback_data=VARIATIONS[CATEGORIES[3]][0]),InlineKeyboardButton(text='–í—ã',callback_data=VARIATIONS[CATEGORIES[3]][1])],[InlineKeyboardButton(text='–í–º–µ—Å—Ç–µ',callback_data=VARIATIONS[CATEGORIES[3]][2])]])
        }        

        return producer_photo, producer_message[self.language], producer_keybard[self.language]


    def location(self):
        
        location_photo = 'static/questions/q5.jpg'

        location_message = {
            True  : """<b>–¢“Ø—Å—ñ—Ä—ñ–ª—ñ–º –ª–æ–∫–∞—Ü–∏—è—Å—ã–Ω —Ç–∞“£–¥–∞“£—ã–∑?</b>""",
            False : """<b>–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –¥–ª—è —Å—ä–µ–º–∫–∏?</b>"""
        }

        location_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–¢–∞–±–∏“ì–∞—Çüèî',callback_data=VARIATIONS[CATEGORIES[4]][0]),InlineKeyboardButton(text='“ö–∞–ª–∞üèô',callback_data=VARIATIONS[CATEGORIES[4]][1])],[InlineKeyboardButton(text='–°—Ç—É–¥–∏—èüì∏',callback_data=VARIATIONS[CATEGORIES[4]][2])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ü—Ä–∏—Ä–æ–¥–∞üèî',callback_data=VARIATIONS[CATEGORIES[4]][0]),InlineKeyboardButton(text='–ì–æ—Ä–æ–¥üèô',callback_data=VARIATIONS[CATEGORIES[4]][1])],[InlineKeyboardButton(text='–°—Ç—É–¥–∏—èüì∏',callback_data=VARIATIONS[CATEGORIES[4]][2])]])
        }        
        
        return location_photo, location_message[self.language], location_keybard[self.language]


    def price(self):
        
        price_photo = 'static/questions/q6.jpg'

        price_message = {
            True  : """<b>–¢“Ø—Å—ñ—Ä—ñ–ª—ñ–º–¥—ñ “õ–∞–Ω—à–∞ —Å—É–º–º–∞“ì–∞ –∂–æ—Å–ø–∞—Ä–ª–∞–ø –æ—Ç—ã—Ä—Å—ã–∑?</b>""",
            False : """<b>–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?</b>"""
        }
        
        price_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='100-150 –º—ã“£',callback_data=VARIATIONS[CATEGORIES[5]][0]),InlineKeyboardButton(text='150-300 –º—ã“£',callback_data=VARIATIONS[CATEGORIES[5]][1])],[InlineKeyboardButton(text='300 –º—ã“£ –∂”ô–Ω–µ –∂–æ“ì–∞—Ä—ã',callback_data=VARIATIONS[CATEGORIES[5]][2])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='100-150 —Ç—ã—Å.',callback_data=VARIATIONS[CATEGORIES[5]][0]),InlineKeyboardButton(text='150-300 —Ç—ã—Å.',callback_data=VARIATIONS[CATEGORIES[5]][1])],[InlineKeyboardButton(text='–æ—Ç 300 —Ç—ã—Å. –∏ –≤—ã—à–µ',callback_data=VARIATIONS[CATEGORIES[5]][2])]])
        }        
        
        return price_photo, price_message[self.language], price_keybard[self.language]


    def season(self):
        
        season_photo = 'static/questions/q7.jpg'

        season_message = {
            True   : """<b>–¢–æ–π—ã“£—ã–∑ “õ–∞–π –º–µ–∑–≥—ñ–ª–¥–µ?üíç</b>""",
            False  : """<b>–ö–æ–≥–¥–∞ —É –≤–∞—Å —Å–≤–∞–¥—å–±–∞?üíç</b>""",
        }

        season_keybard = {
            True  : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ö”©–∫—Ç–µ–ºüèû',callback_data=VARIATIONS[CATEGORIES[6]][0]),InlineKeyboardButton(text='–ñ–∞–∑‚òÄÔ∏è',callback_data=VARIATIONS[CATEGORIES[6]][1])],[InlineKeyboardButton(text='–ö“Ø–∑üçÅ',callback_data=VARIATIONS[CATEGORIES[6]][2]),InlineKeyboardButton(text='“ö—ã—Å‚òÉÔ∏è',callback_data=VARIATIONS[CATEGORIES[6]][3])]]),
            False : InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–í–µ—Å–Ω–∞üèû',callback_data=VARIATIONS[CATEGORIES[6]][0]),InlineKeyboardButton(text='–õ–µ—Ç–æ‚òÄÔ∏è',callback_data=VARIATIONS[CATEGORIES[6]][1])],[InlineKeyboardButton(text='–í–µ—Å–Ω–∞üçÅ',callback_data=VARIATIONS[CATEGORIES[6]][2]),InlineKeyboardButton(text='–ó–∏–º–∞‚òÉÔ∏è',callback_data=VARIATIONS[CATEGORIES[6]][3])]])
        }

        return season_photo, season_message[self.language], season_keybard[self.language]


    def contact(self):

        contact_photo = 'static/img/contact.jpg'

        contact_message = {
            True  : """<b>–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º–µ—Ä—ñ“£—ñ–∑–¥—ñ –∂—ñ–±–µ—Ä—ñ“£—ñ–∑. –ñ”ô–Ω–µ –±—ñ–∑ –∂–∞—É–∞–ø—Ç–∞—Ä—ã“£—ã–∑“ì–∞ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã —Å—ñ–∑–≥–µ —Ç–µ–≥—ñ–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∂“Ø—Ä–≥—ñ–∑–µ—Ç—ñ–Ω –±–æ–ª–∞–º—ã–∑. ü§ó</b>""",
            False : """<b>–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ò –º—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –≤–∞—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤.  ü§ó</b>"""
        }

        contact_keyboard = {
            True  : ReplyKeyboardMarkup(keyboard=[[KeyboardButton('–ñ—ñ–±–µ—Ä—Éüìû',request_contact=True)]],resize_keyboard=True),
            False : ReplyKeyboardMarkup(keyboard=[[KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—åüìû',request_contact=True)]],resize_keyboard=True)
        }

        return contact_photo, contact_message[self.language], contact_keyboard[self.language]        
        

